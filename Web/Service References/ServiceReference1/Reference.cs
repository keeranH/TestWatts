//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEconocomService")]
    public interface IEconocomService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetPeople", ReplyAction="http://tempuri.org/IEconocomService/GetPeopleResponse")]
        Econocom.Service.Person[] GetPeople();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetPeopleWithOutCicularReferencing", ReplyAction="http://tempuri.org/IEconocomService/GetPeopleWithOutCicularReferencingResponse")]
        Econocom.Service.Person[] GetPeopleWithOutCicularReferencing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListePays", ReplyAction="http://tempuri.org/IEconocomService/ListePaysResponse")]
        Econocom.Model.Models.Benchmark.PAYS[] ListePays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListeLangues", ReplyAction="http://tempuri.org/IEconocomService/ListeLanguesResponse")]
        Econocom.Model.Models.CMS.Langue[] ListeLangues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListeConsoWattHeur", ReplyAction="http://tempuri.org/IEconocomService/ListeConsoWattHeurResponse")]
        Econocom.Model.Models.Benchmark.CONSOWATTHEUR[] ListeConsoWattHeur();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetContact", ReplyAction="http://tempuri.org/IEconocomService/GetContactResponse")]
        Econocom.Model.Models.Benchmark.CONTACT GetContact(Econocom.Model.Models.Benchmark.CONTACT contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/SetClient", ReplyAction="http://tempuri.org/IEconocomService/SetClientResponse")]
        Econocom.Model.Models.Benchmark.CLIENT SetClient(Econocom.Model.Models.Benchmark.CLIENT client);
        
        // CODEGEN: Generating message contract since the operation SaveDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/SaveDocument", ReplyAction="http://tempuri.org/IEconocomService/SaveDocumentResponse")]
        Web.ServiceReference1.SaveDocumentResponse SaveDocument(Web.ServiceReference1.DocumentUpload request);
        
        // CODEGEN: Generating message contract since the wrapper name (DocumentUpload) of message DocumentUpload does not match the default value (UploadDocument)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/UploadDocument", ReplyAction="http://tempuri.org/IEconocomService/UploadDocumentResponse")]
        Web.ServiceReference1.UploadResult UploadDocument(Web.ServiceReference1.DocumentUpload request);
        
        // CODEGEN: Generating message contract since the wrapper name (FileUpload) of message FileUpload does not match the default value (UploadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/UploadFile", ReplyAction="http://tempuri.org/IEconocomService/UploadFileResponse")]
        Web.ServiceReference1.UploadResult UploadFile(Web.ServiceReference1.FileUpload request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/SauveGardeClient", ReplyAction="http://tempuri.org/IEconocomService/SauveGardeClientResponse")]
        bool SauveGardeClient(Econocom.Model.Models.Benchmark.CLIENT client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListeContenuPublier", ReplyAction="http://tempuri.org/IEconocomService/ListeContenuPublierResponse")]
        Econocom.Model.Models.CMS.ContenuModere[] ListeContenuPublier(string nomDePage, string cultureDeLangue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetContenuPublier", ReplyAction="http://tempuri.org/IEconocomService/GetContenuPublierResponse")]
        Econocom.Model.Models.CMS.ContenuModere GetContenuPublier(string nomDePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ActualiserClient", ReplyAction="http://tempuri.org/IEconocomService/ActualiserClientResponse")]
        bool ActualiserClient(Econocom.Model.Models.Benchmark.CLIENT client, string btnStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListePage", ReplyAction="http://tempuri.org/IEconocomService/ListePageResponse")]
        Econocom.Model.Models.CMS.Page[] ListePage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ActualiserContenuPublier", ReplyAction="http://tempuri.org/IEconocomService/ActualiserContenuPublierResponse")]
        Econocom.Model.Models.CMS.ContenuModere ActualiserContenuPublier(Econocom.Model.Models.CMS.ContenuModere publishedContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetClientNonModerer", ReplyAction="http://tempuri.org/IEconocomService/GetClientNonModererResponse")]
        Econocom.Model.Models.Benchmark.CLIENT[] GetClientNonModerer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetClientParId", ReplyAction="http://tempuri.org/IEconocomService/GetClientParIdResponse")]
        Econocom.Model.Models.Benchmark.CLIENT GetClientParId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetPays", ReplyAction="http://tempuri.org/IEconocomService/GetPaysResponse")]
        Econocom.Model.Models.Benchmark.PAYS[] GetPays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListeSection", ReplyAction="http://tempuri.org/IEconocomService/ListeSectionResponse")]
        Econocom.Model.Models.CMS.Section[] ListeSection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetContactParVerificationCode", ReplyAction="http://tempuri.org/IEconocomService/GetContactParVerificationCodeResponse")]
        Econocom.Model.Models.Benchmark.CONTACT GetContactParVerificationCode(string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetQuestions", ReplyAction="http://tempuri.org/IEconocomService/GetQuestionsResponse")]
        Econocom.Model.Models.Benchmark.QUESTION[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/GetQuestionParId", ReplyAction="http://tempuri.org/IEconocomService/GetQuestionParIdResponse")]
        Econocom.Model.Models.Benchmark.QUESTION GetQuestionParId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/MAJContact", ReplyAction="http://tempuri.org/IEconocomService/MAJContactResponse")]
        Econocom.Model.Models.Benchmark.CONTACT MAJContact(Econocom.Model.Models.Benchmark.CONTACT contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/VerificationCompte", ReplyAction="http://tempuri.org/IEconocomService/VerificationCompteResponse")]
        Econocom.Model.Models.Benchmark.CONTACT VerificationCompte(Econocom.Model.ViewModel.RegisterViewModel enregistrementModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/SauvegardeSection", ReplyAction="http://tempuri.org/IEconocomService/SauvegardeSectionResponse")]
        bool SauvegardeSection(Econocom.Model.ViewModel.CMS.SectionViewModel sectionViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/SauvegardePage", ReplyAction="http://tempuri.org/IEconocomService/SauvegardePageResponse")]
        bool SauvegardePage(Econocom.Model.ViewModel.CMS.PageViewModel pageViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEconocomService/ListeModele", ReplyAction="http://tempuri.org/IEconocomService/ListeModeleResponse")]
        Econocom.Model.Models.CMS.Modele[] ListeModele();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentUpload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DocumentUpload {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string documentName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] data;
        
        public DocumentUpload() {
        }
        
        public DocumentUpload(string documentName, byte[] data) {
            this.documentName = documentName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveDocumentResponse {
        
        public SaveDocumentResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Error;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string[] ErrorLines;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Status;
        
        public UploadResult() {
        }
        
        public UploadResult(string Error, string[] ErrorLines, bool Status) {
            this.Error = Error;
            this.ErrorLines = ErrorLines;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUpload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUpload {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Data;
        
        public FileUpload() {
        }
        
        public FileUpload(string FileName, System.IO.Stream Data) {
            this.FileName = FileName;
            this.Data = Data;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEconocomServiceChannel : Web.ServiceReference1.IEconocomService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EconocomServiceClient : System.ServiceModel.ClientBase<Web.ServiceReference1.IEconocomService>, Web.ServiceReference1.IEconocomService {
        
        public EconocomServiceClient() {
        }
        
        public EconocomServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EconocomServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EconocomServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EconocomServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Econocom.Service.Person[] GetPeople() {
            return base.Channel.GetPeople();
        }
        
        public Econocom.Service.Person[] GetPeopleWithOutCicularReferencing() {
            return base.Channel.GetPeopleWithOutCicularReferencing();
        }
        
        public Econocom.Model.Models.Benchmark.PAYS[] ListePays() {
            return base.Channel.ListePays();
        }
        
        public Econocom.Model.Models.CMS.Langue[] ListeLangues() {
            return base.Channel.ListeLangues();
        }
        
        public Econocom.Model.Models.Benchmark.CONSOWATTHEUR[] ListeConsoWattHeur() {
            return base.Channel.ListeConsoWattHeur();
        }
        
        public Econocom.Model.Models.Benchmark.CONTACT GetContact(Econocom.Model.Models.Benchmark.CONTACT contact) {
            return base.Channel.GetContact(contact);
        }
        
        public Econocom.Model.Models.Benchmark.CLIENT SetClient(Econocom.Model.Models.Benchmark.CLIENT client) {
            return base.Channel.SetClient(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Web.ServiceReference1.SaveDocumentResponse Web.ServiceReference1.IEconocomService.SaveDocument(Web.ServiceReference1.DocumentUpload request) {
            return base.Channel.SaveDocument(request);
        }
        
        public void SaveDocument(string documentName, byte[] data) {
            Web.ServiceReference1.DocumentUpload inValue = new Web.ServiceReference1.DocumentUpload();
            inValue.documentName = documentName;
            inValue.data = data;
            Web.ServiceReference1.SaveDocumentResponse retVal = ((Web.ServiceReference1.IEconocomService)(this)).SaveDocument(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Web.ServiceReference1.UploadResult Web.ServiceReference1.IEconocomService.UploadDocument(Web.ServiceReference1.DocumentUpload request) {
            return base.Channel.UploadDocument(request);
        }
        
        public string UploadDocument(string documentName, byte[] data, out string[] ErrorLines, out bool Status) {
            Web.ServiceReference1.DocumentUpload inValue = new Web.ServiceReference1.DocumentUpload();
            inValue.documentName = documentName;
            inValue.data = data;
            Web.ServiceReference1.UploadResult retVal = ((Web.ServiceReference1.IEconocomService)(this)).UploadDocument(inValue);
            ErrorLines = retVal.ErrorLines;
            Status = retVal.Status;
            return retVal.Error;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Web.ServiceReference1.UploadResult Web.ServiceReference1.IEconocomService.UploadFile(Web.ServiceReference1.FileUpload request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(string FileName, System.IO.Stream Data, out string[] ErrorLines, out bool Status) {
            Web.ServiceReference1.FileUpload inValue = new Web.ServiceReference1.FileUpload();
            inValue.FileName = FileName;
            inValue.Data = Data;
            Web.ServiceReference1.UploadResult retVal = ((Web.ServiceReference1.IEconocomService)(this)).UploadFile(inValue);
            ErrorLines = retVal.ErrorLines;
            Status = retVal.Status;
            return retVal.Error;
        }
        
        public bool SauveGardeClient(Econocom.Model.Models.Benchmark.CLIENT client) {
            return base.Channel.SauveGardeClient(client);
        }
        
        public Econocom.Model.Models.CMS.ContenuModere[] ListeContenuPublier(string nomDePage, string cultureDeLangue) {
            return base.Channel.ListeContenuPublier(nomDePage, cultureDeLangue);
        }
        
        public Econocom.Model.Models.CMS.ContenuModere GetContenuPublier(string nomDePage) {
            return base.Channel.GetContenuPublier(nomDePage);
        }
        
        public bool ActualiserClient(Econocom.Model.Models.Benchmark.CLIENT client, string btnStatus) {
            return base.Channel.ActualiserClient(client, btnStatus);
        }
        
        public Econocom.Model.Models.CMS.Page[] ListePage() {
            return base.Channel.ListePage();
        }
        
        public Econocom.Model.Models.CMS.ContenuModere ActualiserContenuPublier(Econocom.Model.Models.CMS.ContenuModere publishedContent) {
            return base.Channel.ActualiserContenuPublier(publishedContent);
        }
        
        public Econocom.Model.Models.Benchmark.CLIENT[] GetClientNonModerer() {
            return base.Channel.GetClientNonModerer();
        }
        
        public Econocom.Model.Models.Benchmark.CLIENT GetClientParId(int id) {
            return base.Channel.GetClientParId(id);
        }
        
        public Econocom.Model.Models.Benchmark.PAYS[] GetPays() {
            return base.Channel.GetPays();
        }
        
        public Econocom.Model.Models.CMS.Section[] ListeSection() {
            return base.Channel.ListeSection();
        }
        
        public Econocom.Model.Models.Benchmark.CONTACT GetContactParVerificationCode(string verificationCode) {
            return base.Channel.GetContactParVerificationCode(verificationCode);
        }
        
        public Econocom.Model.Models.Benchmark.QUESTION[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public Econocom.Model.Models.Benchmark.QUESTION GetQuestionParId(int id) {
            return base.Channel.GetQuestionParId(id);
        }
        
        public Econocom.Model.Models.Benchmark.CONTACT MAJContact(Econocom.Model.Models.Benchmark.CONTACT contact) {
            return base.Channel.MAJContact(contact);
        }
        
        public Econocom.Model.Models.Benchmark.CONTACT VerificationCompte(Econocom.Model.ViewModel.RegisterViewModel enregistrementModel) {
            return base.Channel.VerificationCompte(enregistrementModel);
        }
        
        public bool SauvegardeSection(Econocom.Model.ViewModel.CMS.SectionViewModel sectionViewModel) {
            return base.Channel.SauvegardeSection(sectionViewModel);
        }
        
        public bool SauvegardePage(Econocom.Model.ViewModel.CMS.PageViewModel pageViewModel) {
            return base.Channel.SauvegardePage(pageViewModel);
        }
        
        public Econocom.Model.Models.CMS.Modele[] ListeModele() {
            return base.Channel.ListeModele();
        }
    }
}
