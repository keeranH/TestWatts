@using Econocom.Model.Models.Benchmark
@using MVCControlsToolkit.Controls
@using Econocom.Model.ViewModel;
@model ReferenceViewModel


@{
    ViewBag.Title = "Index";
    var displaModel = Model.Entitees.ElementAt(0);
}

@using (Html.BeginForm("Index", "TypeObjet"))
{

@Html.ValidationSummary(false)
    <div style="border:solid 0px red; overflow-x: auto; overflow-y: auto">
        <table style="border: solid 0px blue;">
            @if (displaModel is TypeObjetViewModel)
            {
                <thead>
                    <tr>
                        <th style="text-align:left">Nom Objet</th>
                        <th style="text-align:left">Nom Table</th>
                        <th style="text-align:left">Namespace</th>
                    </tr>
                </thead>
            }
                        
            @Html.SortableListFor(
                m => m.Entitees,
                new object[]{
                    _S.H<TypeObjetViewModel>(
                        @<text>                             
                             @item.HiddenFor(m => m.Id)                             
                             <tr>
                                 <td>
                                     @item.TypedEditDisplayFor(m => m.NomObjet, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomObjet, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.NomTable, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomTable, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.Namespace, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.Namespace, "*")
                                 </td>
                                  <td>                                     
                                     
                                 </td>
                             </tr>
                         </text>),
             _S.H<TypeObjetViewModel>(
                        @<text>                             
                             @item.HiddenFor(m => m.Id)                             
                             <tr>
                                 <td>
                                     @item.TypedEditDisplayFor(m => m.NomObjet, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomObjet, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.NomTable, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomTable, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.Namespace, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.Namespace, "*")
                                 </td>
                                  <td>                                     
                                     
                                 </td>
                             </tr>
                         </text>),
             _S.H<TypeObjetViewModel>(
                        @<text>                             
                             @item.HiddenFor(m => m.Id)                             
                             <tr>
                                 <td>
                                     @item.TypedEditDisplayFor(m => m.NomObjet, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomObjet, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.NomTable, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.NomTable, "*")
                                 </td>
                                 <td>                                     
                                     @item.TypedEditDisplayFor(m => m.Namespace, simpleClick: true) 
                                     @item.ValidationMessageFor(m => m.Namespace, "*")
                                 </td>
                                  <td>                                     
                                     
                                 </td>
                             </tr>
                         </text>)
                },
                templateSelector: (l => l is TypeObjetViewModel ? 0 : 1),
                htmlAttributesItems: new Dictionary<string, object> { { "class", "PersonListItem" } },
                itemContainer: ExternalContainerType.tr,
                allItemsContainer: ExternalContainerType.tbody,
                canSort: false
                 )   

        </table> 
    </div>   
    <div class='ControlPanel'>
        @if (displaModel is TypeObjetViewModel)
        {
            @Html.SortableListAddButtonFor(m => m.Entitees, "Ajouter type objet", templateIndex: 0)
        }
        else if (displaModel is TypeObjetViewModel)
        {
             @Html.SortableListAddButtonFor(m => m.Entitees, "Add new Customer", templateIndex: 1)
        }
        else if (displaModel is TypeObjetViewModel)
        {
              @Html.SortableListAddButtonFor(m => m.Entitees, "Add new acid", templateIndex: 2)
        }       
        <input type='submit' value='Submit' />
    </div>    
}